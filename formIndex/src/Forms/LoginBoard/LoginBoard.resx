<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerTimeNow.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>150, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zcD/bs23JP1sekAvef2MvtlY9YCXvQbZ/G1AB1gXKaaHJjWL2yh1C9VRrflMst6Hux5G2z2Q5fcdHdBL
        Xjs++X7XarTTW/NNSx9bGtBL2ry2bzrWq1vzTv42oAOsixTT3+5r6kh/1prOLOue1ncx0u6pRPP7jg/o
        Ja8/sm820neT41rzTcn68xjQ64l2NQHLJA9rq0yz3a0woAMMRQppzbV9QVdSR7tNaz6zrHtQMumJW3dv
        bRcyoJe0eW/fdKS6PWzqq7r3lXW3PKCXtKury8d9mlLqYr+bt/YGdAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIbnR37k/wM0o5crSAksCgAAAABJRU5ErkJggg==
</value>
  </data>
</root>